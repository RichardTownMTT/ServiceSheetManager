@model ServiceSheetManager.ViewModels.EquipmentVMs.CreateEquipmentCalibrationVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div class="panel panel-default">
    <div class="panel-body">
        <form class="form-horizontal" asp-action="Create" method="get">
            <div class="row form-group">
                <div class="col-md-2">@Html.LabelFor(m => m.EquipmentBarcodesAndDesc, new { @class = "control-label" })</div>
                <div class="col-md-10">@Html.DropDownListFor(m => m.SelectedEquipmentItem, new SelectList(Model.EquipmentBarcodesAndDesc, "Text", "Value"), new { @class = "form-control" })</div>
            </div>
            <input type="submit" value="Load Equipment" class="btn btn-default" />
        </form>
    </div>
</div>
@if (Model.EquipmentLoaded)
{
    <div class="panel panel-default">
        <div class="panel-body">
            <br>
            <div class="row form-group">
                <div class="col-md-2">@Html.LabelFor(m => m.EquipmentDescription, new { @class = "control-label" })</div>
                <div class="col-md-10">@Html.DisplayFor(m => m.EquipmentDescription, new { @class = "form-control" }))</div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">@Html.LabelFor(m => m.SerialNumber, new { @class = "control-label" })</div>
                <div class="col-md-10">@Html.DisplayFor(m => m.SerialNumber, new { @class = "form-control" })</div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">@Html.LabelFor(m => m.CalibrationPeriod, new { @class = "control-label" })</div>
                <div class="col-md-10">@Html.DisplayFor(m => m.CalibrationPeriod, new { @class = "form-control" })</div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-body">
            @using (Html.BeginForm("CreateSave", "EquipmentCalibration", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.IdSelected)
                <div class="row">
                    <div class="col-md-12">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">@Html.LabelFor(m => m.CertificateNo, new { @class = "control-label" })</div>
                    <div class="col-md-4">@Html.TextBoxFor(m => m.CertificateNo, new { @class = "form-control" })</div>
                    <div class="col-md-6 text-danger">@Html.ValidationMessageFor(m => m.CertificateNo)</div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">@Html.LabelFor(m => m.PassedCalibration, new { @class = "control-label" })</div>
                    <div class="col-md-4">@Html.CheckBoxFor(m => m.PassedCalibration)</div>
                    <div class="col-md-6"></div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">@Html.LabelFor(m => m.DtPassedCal, new { @class = "control-label" })</div>
                    <div class="col-md-4">@Html.TextBoxFor(m => m.DtPassedCal, "{0:dd/MM/yyyy}", new { @class = "form-control datepickerDtReport" })</div>
                    <div class="col-md-6 text-danger">@Html.ValidationMessageFor(m => m.DtPassedCal)</div>
                </div>
                <input type="submit" value="Save" class="btn btn-default" />
            }
        </div>
    </div>
}
<script>
    $(document).ready(function () {

        $('.datepickerDtReport').datepicker({ dateFormat: 'dd/mm/yy' });

        //Fix for the date validation failing due to not being US format
        $.validator.addMethod('date', function (value, element) {
            if (this.optional(element)) {
                return true;
            }
            var valid = true;
            try {
                $.datepicker.parseDate('dd/mm/yy', value);
            }
            catch (err) {
                valid = false;
            }
            return valid;
        });
    });


</script>

